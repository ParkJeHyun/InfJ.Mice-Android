package kr.co.iekorea.mc.adapter;import java.util.ArrayList;import kr.co.iekorea.mc.MyBriefcaseSchedule_Activity;import kr.co.iekorea.mc.R;import kr.co.iekorea.mc.staticdata.StaticData;import kr.co.iekorea.mc.util.WeakAsyncTask;import kr.co.iekorea.mc.xml.MybriefDAO;import kr.co.iekorea.mc.xml.ScheduleListDto;import android.app.Activity;import android.app.AlertDialog;import android.content.Context;import android.content.DialogInterface;import android.content.Intent;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;public class ScheduleContentsAdapter extends BaseAdapter {	public Context ctx;	public ArrayList<ScheduleListDto> items;	public LayoutInflater inflater;	public ViewHolderSchedule holder;	public Activity activity;	ScheduleViewPagerAdapter vadapter;	public boolean deleteMode = false;						// 삭제 모드		public ScheduleContentsAdapter(Context ctx, ArrayList<ScheduleListDto> items,Activity activity			, ScheduleViewPagerAdapter vadapter){		this.ctx = ctx;		this.items = items;		this.activity = activity;		this.vadapter = vadapter;		init();	}		public void init(){		inflater = (LayoutInflater) ctx.getSystemService(Context.LAYOUT_INFLATER_SERVICE);	}	@Override	public int getCount() {		return items.size();	}	@Override	public Object getItem(int position) {		return items.get(position);	}	@Override	public long getItemId(int position) {		return position;	}		public StringBuffer temp1,temp2;	@Override	public View getView(int position, View convertView, ViewGroup parent) {		if(convertView == null){			convertView = inflater.inflate(R.layout.schedule_list_item, null);			holder = new ViewHolderSchedule();			holder.title = (TextView) convertView.findViewById(R.id.text_title);			holder.start_time = (TextView) convertView.findViewById(R.id.text_start_time);			holder.end_time = (TextView) convertView.findViewById(R.id.text_end_time);			holder.btn_delete = (ImageView) convertView.findViewById(R.id.btn_delete);			convertView.setTag(holder);		}else{			holder = (ViewHolderSchedule) convertView.getTag();		}		temp1 = new StringBuffer();		temp1.append(items.get(position).START_TIME.substring(0,2)).append(":")		.append(items.get(position).START_TIME.substring(2,4));		holder.start_time.setText(temp1);		temp2 = new StringBuffer();		temp2.append(items.get(position).END_TIME.substring(0,2)).append(":")		.append(items.get(position).END_TIME.substring(2,4));		holder.end_time.setText(temp2);		holder.title.setText(items.get(position).TITLE);				// delete mode		if(deleteMode){			holder.btn_delete.setVisibility(ImageView.VISIBLE);			holder.btn_delete.setOnClickListener(new DeleteListener(position));		}else{			holder.btn_delete.setVisibility(ImageView.GONE);		}		        // 언어 설정에 다른 화면 구성		switch (StaticData.NOWLANGUAGE) {		case StaticData.KOREA:			holder.btn_delete.setImageResource(R.drawable.btn_delete_kr);			break;		case StaticData.ENGLISH:			holder.btn_delete.setImageResource(R.drawable.btn_delete_en);			break;		case StaticData.CHINA:			holder.btn_delete.setImageResource(R.drawable.btn_delete_cn);			break;		}						return convertView;	}		public void changeDeleteMode(){		if(deleteMode){			deleteMode = false;		}else{			deleteMode = true;		}		notifyDataSetChanged();	}		class DeleteListener implements OnClickListener{		public int position;		public DeleteListener(int position){			this.position = position;		}		@Override		public void onClick(View v) {			String alertTile = "";			String buttonMessage = "";			String buttonYes = "";			String buttonNo = "";			switch (StaticData.NOWLANGUAGE) {			case StaticData.KOREA:				alertTile = ctx.getResources().getString(R.string.check_delete_ko);				buttonMessage = ctx.getResources().getString(R.string.delete_ko);				buttonYes = ctx.getResources().getString(R.string.yes_ko);				buttonNo = ctx.getResources().getString(R.string.no_ko);				break;			case StaticData.ENGLISH:				alertTile = ctx.getResources().getString(R.string.check_delete_en);				buttonMessage = ctx.getResources().getString(R.string.delete_en);				buttonYes = ctx.getResources().getString(R.string.yes_en);				buttonNo = ctx.getResources().getString(R.string.no_en);				break;			case StaticData.CHINA:				alertTile = ctx.getResources().getString(R.string.check_delete_cn);				buttonMessage = ctx.getResources().getString(R.string.delete_cn);				buttonYes = ctx.getResources().getString(R.string.yes_cn);				buttonNo = ctx.getResources().getString(R.string.no_cn);				break;			}						new AlertDialog.Builder(ctx)			.setTitle(alertTile)			.setMessage(buttonMessage)			.setPositiveButton(buttonYes, new DialogInterface.OnClickListener() {				@Override				public void onClick(DialogInterface dialog, int which) {					deleteSelectItem(position);					dialog.dismiss();				}			})			.setNegativeButton(buttonNo, null)			.show();		}	}		public int nowDeletePosition;	public void deleteSelectItem(int position){		nowDeletePosition = position;		new deleteItem(activity).execute();	}		class deleteItem extends WeakAsyncTask<Void, Void, Void,Activity>{		public deleteItem(Activity target) {			super(target);		}		boolean result;				@Override		protected void onPreExecute(Activity target) {		}		@Override		protected Void doInBackground(Activity target,Void... params) {			MybriefDAO dao = new MybriefDAO(activity);			try {				result = dao.setDeleteSchedule(items.get(nowDeletePosition).SCHEDUEL_ID);			} catch (Exception e) {				result = false;			}			return null;		}				@Override		protected void onPostExecute(Activity target,Void result) {			if(this.result){//				Toast.makeText(ctx, "삭제 되었습니다.", Toast.LENGTH_SHORT).show();				items.remove(nowDeletePosition);				nowDeletePosition = 0;				if(items.size() == 0){					Intent intent = new Intent(ctx, MyBriefcaseSchedule_Activity.class);					activity.startActivity(intent);					activity.finish();				}else{					notifyDataSetChanged();				}//				vadapter.notifyDataSetChanged();				notifyDataSetChanged();			}else{				switch (StaticData.NOWLANGUAGE) {				case StaticData.KOREA:				Toast.makeText(ctx,				R.string.please_retry_ko, Toast.LENGTH_SHORT).show();				break;				case StaticData.ENGLISH:					Toast.makeText(ctx,				R.string.please_retry_en, Toast.LENGTH_SHORT).show();				break;				case StaticData.CHINA:					Toast.makeText(ctx,				R.string.please_retry_cn, Toast.LENGTH_SHORT).show();				break;				}			}		}	}}