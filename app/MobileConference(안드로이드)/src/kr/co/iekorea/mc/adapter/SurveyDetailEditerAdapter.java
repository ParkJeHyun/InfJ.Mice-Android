package kr.co.iekorea.mc.adapter;import java.util.ArrayList;import kr.co.iekorea.mc.R;import kr.co.iekorea.mc.staticdata.StaticData;import kr.co.iekorea.mc.util.WeakAsyncTask;import kr.co.iekorea.mc.xml.SurveyDAO;import kr.co.iekorea.mc.xml.SurveyQuestionSubDTO;import android.app.Activity;import android.app.AlertDialog;import android.content.Context;import android.content.DialogInterface;import android.view.LayoutInflater;import android.view.View;import android.view.View.OnClickListener;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;public class SurveyDetailEditerAdapter extends BaseAdapter {	public Context ctx;	public ArrayList<SurveyQuestionSubDTO> items;	public LayoutInflater inflater;	public ViewHolder_Question holder;	public Activity activity;	public int research_id;		public SurveyDetailEditerAdapter(Context ctx, ArrayList<SurveyQuestionSubDTO> items, Activity activity, int research_id){		this.ctx = ctx;		this.items = items;		this.activity = activity;		this.research_id = research_id;		this.init();	}		public void init(){		this.inflater = (LayoutInflater) ctx.getSystemService(Context.LAYOUT_INFLATER_SERVICE);	}	@Override	public int getCount() {		return items.size();	}	@Override	public Object getItem(int position) {		return items.get(position);	}	@Override	public long getItemId(int position) {		return position;	}	@Override	public View getView(int position, View convertView, ViewGroup parent) {		if(convertView == null){			convertView = inflater.inflate(R.layout.list_item_question, null);			holder = new ViewHolder_Question();			holder.title = (TextView) convertView.findViewById(R.id.text_title);			holder.btn_delete = (ImageView) convertView.findViewById(R.id.btn_delete);			convertView.setTag(holder);		}else{			holder = (ViewHolder_Question) convertView.getTag();		}				holder.title.setText(items.get(position).QUESTION_TITLE);				// delete mode		if(deleteMode){	        // 언어 설정에 다른 화면 구성			switch (StaticData.NOWLANGUAGE) {			case StaticData.KOREA:				holder.btn_delete.setImageResource(R.drawable.btn_delete_kr);				break;			case StaticData.ENGLISH:				holder.btn_delete.setImageResource(R.drawable.btn_delete_en);				break;			case StaticData.CHINA:				holder.btn_delete.setImageResource(R.drawable.btn_delete_cn);				break;			}			holder.btn_delete.setVisibility(ImageView.VISIBLE);			holder.btn_delete.setOnClickListener(new DeleteListener(position));		}else{			holder.btn_delete.setVisibility(ImageView.GONE);		}				return convertView;	}		public boolean deleteMode = false;						// 삭제 모드	public void changeDeleteMode(){		if(deleteMode){			deleteMode = false;		}else{			deleteMode = true;		}		notifyDataSetChanged();	}		class DeleteListener implements OnClickListener{		public int position;		public DeleteListener(int position){			this.position = position;		}		@Override		public void onClick(View v) {			String alertTile = "삭제 확인";			String buttonMessage = "삭제 하시겠습니까?";			String buttonYes = "예";			String buttonNo = "아니오";						new AlertDialog.Builder(activity)			.setTitle(alertTile)			.setMessage(buttonMessage)			.setPositiveButton(buttonYes, new DialogInterface.OnClickListener() {				@Override				public void onClick(DialogInterface dialog, int which) {					deleteSelectItem(position);					dialog.dismiss();				}			})			.setNegativeButton(buttonNo, null)			.show();		}	}			public int nowDeletePosition;	public void deleteSelectItem(int position){		nowDeletePosition = position;		new deleteItem(activity).execute();	}		class deleteItem extends WeakAsyncTask<Void, Void, Void,Activity>{		public deleteItem(Activity target) {			super(target);			// TODO Auto-generated constructor stub		}		boolean result;				@Override		protected void onPreExecute(Activity target) {		}		@Override		protected Void doInBackground(Activity target,Void... params) {			SurveyDAO dao = new SurveyDAO(activity);			try {				result = dao.deleteQuestion(research_id,items.get(nowDeletePosition).QUESTION_ID);			} catch (Exception e) {				result = false;			}			return null;		}				@Override		protected void onPostExecute(Activity target,Void result) {			if(this.result){				Toast.makeText(ctx, "삭제 되었습니다.", Toast.LENGTH_SHORT).show();				items.remove(nowDeletePosition);				nowDeletePosition = 0;				notifyDataSetChanged();			}else{				Toast.makeText(ctx, "error", Toast.LENGTH_SHORT).show();			}		}	}}