package kr.co.iekorea.mc;import kr.co.iekorea.mc.adapter.SurveyDetailEditerAdapter;import kr.co.iekorea.mc.dialog.SurveyTitleModifyDialog;import kr.co.iekorea.mc.staticdata.StaticData;import kr.co.iekorea.mc.util.BaseInterface;import kr.co.iekorea.mc.util.ProcessManager;import kr.co.iekorea.mc.util.WeakAsyncTask;import kr.co.iekorea.mc.xml.SurveyDAO;import kr.co.iekorea.mc.xml.SurveyQuestionDTO;import android.app.Activity;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.view.View.OnClickListener;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.ImageButton;import android.widget.LinearLayout;import android.widget.LinearLayout.LayoutParams;import android.widget.ListView;import android.widget.TextView;import android.widget.Toast;public class SurveyDetailEditer_Activity extends Activity implements		BaseInterface {	// Activity control.	private ProcessManager processManager;	// layout area	private ImageButton btn_back;	private LinearLayout layout_header;	public LinearLayout layout_progressbar;		// contents	public ListView list;	public ImageButton btn_survey_start,btn_modify,btn_delete,btn_finish;	public SurveyQuestionDTO surveyQuestionList;	public LinearLayout layout_iseditermode;	public LinearLayout layout_isusermode;	public ImageButton btn_question_add;	public TextView text_survey_title;		// intent	public int research_id;	public String state = "";		// list	public SurveyDetailEditerAdapter adapter;		// dialog	public SurveyTitleModifyDialog dialog;		// 언어	public TextView total_title,text_wait;		@Override	protected void onCreate(Bundle savedInstanceState) {		// TODO Auto-generated method stub		super.onCreate(savedInstanceState);		this.initView();		if (StaticData.logined) {			this.getIntentValues();			this.getXmlResources();			this.modifyXmlResources();						new setQuestionList(SurveyDetailEditer_Activity.this).execute();			// for test//			this.setEventListener();		} else {			switch (StaticData.NOWLANGUAGE) {			case StaticData.KOREA:			Toast.makeText(getApplicationContext(),			R.string.please_retry_ko, Toast.LENGTH_SHORT).show();			break;			case StaticData.ENGLISH:			Toast.makeText(getApplicationContext(),			R.string.please_retry_en, Toast.LENGTH_SHORT).show();			break;			case StaticData.CHINA:			Toast.makeText(getApplicationContext(),			R.string.please_retry_cn, Toast.LENGTH_SHORT).show();			break;			}			Intent intent = new Intent(getApplicationContext(),Login_Activity.class);			startActivity(intent);			overridePendingTransition(android.R.anim.fade_in,android.R.anim.fade_out);			finish();		}	}		public void getIntentValues(){		this.research_id = getIntent().getIntExtra("research_id", 0);	}		@Override	protected void onDestroy() {		super.onDestroy();		this.processManager.deleteActivity(this);	}		@Override	public void onBackPressed() {		Intent intent = new Intent(getApplicationContext(), Survey_Activity.class);		startActivity(intent);		finish();	}		@Override	public void finish() {		super.finish();		overridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out);	}	@Override	public void initView() {		this.setContentView(R.layout.activity_surveydetailediter);		this.processManager = ProcessManager.getInstance();		this.processManager.addActivity(this);	}	@Override	public void getXmlResources() {		this.btn_back = (ImageButton) this.findViewById(R.id.btn_back);		this.layout_header = (LinearLayout) this.findViewById(R.id.layout_header);		this.layout_progressbar = (LinearLayout) this.findViewById(R.id.layout_progressbar);				// contents		this.btn_survey_start = (ImageButton) this.findViewById(R.id.btn_survey_start);		this.btn_modify = (ImageButton) this.findViewById(R.id.btn_modify);		this.btn_delete = (ImageButton) this.findViewById(R.id.btn_delete);		this.btn_finish = (ImageButton) this.findViewById(R.id.btn_finish);		this.layout_iseditermode = (LinearLayout) this.findViewById(R.id.layout_iseditermode);		this.layout_isusermode = (LinearLayout) this.findViewById(R.id.layout_isusermode);		this.btn_question_add = (ImageButton) this.findViewById(R.id.btn_question_add);		this.text_survey_title = (TextView) this.findViewById(R.id.text_survey_title);				this.list = (ListView) this.findViewById(R.id.list);		this.surveyQuestionList = new SurveyQuestionDTO(); 				this.total_title = (TextView) this.findViewById(R.id.total_title);		this.text_wait = (TextView) this.findViewById(R.id.text_wait);	}	@Override	public void modifyXmlResources() {		LayoutParams param;        param = new LayoutParams(LayoutParams.MATCH_PARENT,StaticData.device_Height/10);        this.layout_header.setLayoutParams(param);        // 언어 설정에 다른 화면 구성		switch (StaticData.NOWLANGUAGE) {		case StaticData.KOREA:			this.btn_back.setImageResource(R.drawable.b_back_kr);			this.total_title.setText(R.string.survey_ko);			this.text_wait.setText(R.string.wait_ko);			this.btn_question_add.setImageResource(R.drawable.b_add_kr);			this.btn_survey_start.setImageResource(R.drawable.b_surveystart_kr);			this.btn_modify.setImageResource(R.drawable.b3_revise_kr);			this.btn_delete.setImageResource(R.drawable.b3_delete_kr);			this.btn_finish.setImageResource(R.drawable.b_surveycomplete_kr);			break;		case StaticData.ENGLISH:			this.btn_back.setImageResource(R.drawable.b_back_en);			this.total_title.setText(R.string.survey_en);			this.btn_question_add.setImageResource(R.drawable.b_add_en);			this.btn_survey_start.setImageResource(R.drawable.b_surveystart_en);			this.btn_modify.setImageResource(R.drawable.b3_revise_en);			this.btn_delete.setImageResource(R.drawable.b3_delete_en);			this.btn_finish.setImageResource(R.drawable.b_surveycomplete_en);			this.text_wait.setText(R.string.wait_en);			break;		case StaticData.CHINA:			this.btn_back.setImageResource(R.drawable.b_back_cn);			this.total_title.setText(R.string.survey_cn);			this.btn_question_add.setImageResource(R.drawable.b_add_cn);			this.btn_survey_start.setImageResource(R.drawable.b_surveystart_cn);			this.btn_modify.setImageResource(R.drawable.b3_revise_cn);			this.btn_delete.setImageResource(R.drawable.b3_delete_cn);			this.btn_finish.setImageResource(R.drawable.b_surveycomplete_cn);			this.text_wait.setText(R.string.wait_cn);			break;		}	}		public void showModifyDialog(){		// dialog show		dialog = new SurveyTitleModifyDialog(this, this,research_id);		dialog.show();	}	@Override	public void setEventListener() {		// 짐룬 삭제		this.btn_delete.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				adapter.changeDeleteMode();			}		});		// 설문 종료		this.btn_finish.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				new endSurvey(SurveyDetailEditer_Activity.this).execute();			}		});		// 설문 시작		this.btn_survey_start.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				new startSurvey(SurveyDetailEditer_Activity.this).execute();			}		});				// 설정 버튼 리스너		this.btn_modify.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				// show dialog area in here				// get edittext values in here and saved other area text area				showModifyDialog();			}		});				// 뒤로가기 버튼 리스너		this.btn_back.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				Intent intent = new Intent(getApplicationContext(), Survey_Activity.class);				startActivity(intent);				finish();			}		});				// 설문 등록 버튼 리스너		this.btn_question_add.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				Intent intent = new Intent(getApplicationContext(), SurveyQuestionAdd_Activity.class);				intent.putExtra("research_id", research_id);				startActivity(intent);				finish();			}		});				// 리스트 클릭		this.list.setOnItemClickListener(new OnItemClickListener() {			@Override			public void onItemClick(AdapterView<?> parent, View view,					int position, long id) {				Intent intent = new Intent(getApplicationContext(), SurveyQuestionView_Activity.class);				intent.putExtra("research_id", research_id);				intent.putExtra("research_q_id", surveyQuestionList.QUESTION_LIST.get(position).QUESTION_ID);				startActivity(intent);				finish();			}		});	}		public void upDateList(){		if(surveyQuestionList != null){			adapter = new SurveyDetailEditerAdapter(getApplicationContext(),surveyQuestionList.QUESTION_LIST,this,research_id);			this.list.setAdapter(adapter);			this.state = surveyQuestionList.RESEARCH_STAT;			this.text_survey_title.setText(surveyQuestionList.RESEARCH_TITLE);						if(state == null){				this.btn_question_add.setVisibility(ImageButton.VISIBLE);			}else if (state.equals("진행준비")) {				this.layout_iseditermode.setVisibility(LinearLayout.VISIBLE);				this.btn_question_add.setVisibility(ImageButton.VISIBLE);				this.layout_isusermode.setVisibility(LinearLayout.GONE);			} else if (state.equals("진행중")) {				this.layout_iseditermode.setVisibility(LinearLayout.GONE);				this.btn_question_add.setVisibility(ImageButton.INVISIBLE);				this.layout_isusermode.setVisibility(LinearLayout.VISIBLE);			} else{			}		}	}		//back ground	class setQuestionList extends WeakAsyncTask<Void, Void, Void, Activity>{		boolean result = false;		public setQuestionList(Activity target) {			super(target);		}				@Override		protected void onPreExecute(Activity target) {			layout_progressbar.setVisibility(LinearLayout.VISIBLE);		}		@Override		protected Void doInBackground(Activity target, Void... params) {			SurveyDAO dao = new SurveyDAO(SurveyDetailEditer_Activity.this);			try {				result = dao.setQuestionList(research_id);			} catch (Exception e) {				result = false;			}			if(result){								if(surveyQuestionList != null){					surveyQuestionList = new SurveyQuestionDTO();				}				surveyQuestionList = dao.getQuestionList();			}			return null;		}				@Override		protected void onPostExecute(Activity target, Void result) {			if(this.result){				upDateList();			}else{				switch (StaticData.NOWLANGUAGE) {				case StaticData.KOREA:				Toast.makeText(getApplicationContext(),				R.string.please_retry_ko, Toast.LENGTH_SHORT).show();				break;				case StaticData.ENGLISH:				Toast.makeText(getApplicationContext(),				R.string.please_retry_en, Toast.LENGTH_SHORT).show();				break;				case StaticData.CHINA:				Toast.makeText(getApplicationContext(),				R.string.please_retry_cn, Toast.LENGTH_SHORT).show();				break;				}			}			setEventListener();			layout_progressbar.setVisibility(LinearLayout.GONE);		}	}		// 설문 시작	class startSurvey extends WeakAsyncTask<Void, Void, Void, Activity>{		boolean result = false;		public startSurvey(Activity target) {			super(target);		}				@Override		protected void onPreExecute(Activity target) {			layout_progressbar.setVisibility(LinearLayout.VISIBLE);		}		@Override		protected Void doInBackground(Activity target, Void... params) {			SurveyDAO dao = new SurveyDAO(SurveyDetailEditer_Activity.this);			try {				result = dao.startSurvey(research_id);			} catch (Exception e) {				result = false;			}			return null;		}				@Override		protected void onPostExecute(Activity target, Void result) {			if(this.result){				switch (StaticData.NOWLANGUAGE) {				case StaticData.KOREA:				Toast.makeText(getApplicationContext(),R.string.start_survey_ko, Toast.LENGTH_SHORT).show();				break;				case StaticData.ENGLISH:				Toast.makeText(getApplicationContext(),R.string.start_survey_en, Toast.LENGTH_SHORT).show();				break;				case StaticData.CHINA:				Toast.makeText(getApplicationContext(),R.string.start_survey_cn, Toast.LENGTH_SHORT).show();				break;				}				Intent intent = new Intent(getApplicationContext(), Survey_Activity.class);				startActivity(intent);				finish();			}else{				switch (StaticData.NOWLANGUAGE) {				case StaticData.KOREA:				Toast.makeText(getApplicationContext(),R.string.start_survey_fail_ko, Toast.LENGTH_SHORT).show();				break;				case StaticData.ENGLISH:				Toast.makeText(getApplicationContext(),R.string.start_survey_fail_en, Toast.LENGTH_SHORT).show();				break;				case StaticData.CHINA:				Toast.makeText(getApplicationContext(),R.string.start_survey_fail_cn, Toast.LENGTH_SHORT).show();				break;				}			}			layout_progressbar.setVisibility(LinearLayout.GONE);		}	}		// 설문 끝	class endSurvey extends WeakAsyncTask<Void, Void, Void, Activity>{		boolean result = false;		public endSurvey(Activity target) {			super(target);		}				@Override		protected void onPreExecute(Activity target) {			layout_progressbar.setVisibility(LinearLayout.VISIBLE);		}		@Override		protected Void doInBackground(Activity target, Void... params) {			SurveyDAO dao = new SurveyDAO(SurveyDetailEditer_Activity.this);			try {				result = dao.endSurvey(research_id);			} catch (Exception e) {				result = false;			}			return null;		}				@Override		protected void onPostExecute(Activity target, Void result) {			if(this.result){				switch (StaticData.NOWLANGUAGE) {				case StaticData.KOREA:				Toast.makeText(getApplicationContext(),				R.string.success_ko, Toast.LENGTH_SHORT).show();				break;				case StaticData.ENGLISH:				Toast.makeText(getApplicationContext(),				R.string.success_en, Toast.LENGTH_SHORT).show();				break;				case StaticData.CHINA:				Toast.makeText(getApplicationContext(),				R.string.success_cn, Toast.LENGTH_SHORT).show();				break;				}				Intent intent = new Intent(getApplicationContext(), Survey_Activity.class);				startActivity(intent);				finish();			}else{				switch (StaticData.NOWLANGUAGE) {				case StaticData.KOREA:				Toast.makeText(getApplicationContext(),				R.string.please_retry_ko, Toast.LENGTH_SHORT).show();				break;				case StaticData.ENGLISH:				Toast.makeText(getApplicationContext(),				R.string.please_retry_en, Toast.LENGTH_SHORT).show();				break;				case StaticData.CHINA:				Toast.makeText(getApplicationContext(),				R.string.please_retry_cn, Toast.LENGTH_SHORT).show();				break;				}			}			layout_progressbar.setVisibility(LinearLayout.GONE);		}	}}