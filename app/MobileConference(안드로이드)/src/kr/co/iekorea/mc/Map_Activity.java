package kr.co.iekorea.mc;import java.util.ArrayList;import kr.co.iekorea.mc.adapter.MapAdapter;import kr.co.iekorea.mc.staticdata.StaticData;import kr.co.iekorea.mc.util.BaseInterface;import kr.co.iekorea.mc.util.ImageDownloader;import kr.co.iekorea.mc.util.ProcessManager;import kr.co.iekorea.mc.util.WeakAsyncTask;import kr.co.iekorea.mc.xml.MapDAO;import kr.co.iekorea.mc.xml.MapDTO;import android.app.Activity;import android.content.Intent;import android.net.Uri;import android.os.Bundle;import android.view.View;import android.view.View.OnClickListener;import android.widget.AdapterView;import android.widget.AdapterView.OnItemClickListener;import android.widget.ImageButton;import android.widget.ImageView;import android.widget.LinearLayout;import android.widget.LinearLayout.LayoutParams;import android.widget.ListView;import android.widget.TextView;import android.widget.Toast;public class Map_Activity extends Activity implements BaseInterface {	// Activity control.	private ProcessManager processManager;	// layout area	private ImageButton btn_back;	private LinearLayout layout_header;	private LinearLayout layout_progressbar;	private ImageView btn_advertising;		// contents	private ListView list;		// adapter	private MapAdapter adapter;	private ArrayList<MapDTO> items;		private TextView total_title,text_wait;		@Override	protected void onCreate(Bundle savedInstanceState) {		// TODO Auto-generated method stub		super.onCreate(savedInstanceState);		this.initView();		if (StaticData.logined) {			this.getXmlResources();			this.modifyXmlResources();						new setMapList(Map_Activity.this).execute();		} else {			switch (StaticData.NOWLANGUAGE) {			case StaticData.KOREA:			Toast.makeText(getApplicationContext(),			R.string.please_retry_ko, Toast.LENGTH_SHORT).show();			break;			case StaticData.ENGLISH:			Toast.makeText(getApplicationContext(),			R.string.please_retry_en, Toast.LENGTH_SHORT).show();			break;			case StaticData.CHINA:			Toast.makeText(getApplicationContext(),			R.string.please_retry_cn, Toast.LENGTH_SHORT).show();			break;			}			Intent intent = new Intent(getApplicationContext(),Login_Activity.class);			startActivity(intent);			overridePendingTransition(android.R.anim.fade_in,android.R.anim.fade_out);			finish();		}	}			public void setMapAdapter(){		adapter = new MapAdapter(getApplicationContext(), this, items);		this.list.setAdapter(adapter);	}		@Override	protected void onDestroy() {		super.onDestroy();		this.processManager.deleteActivity(this);	}		@Override	public void onBackPressed() {		Intent intent = new Intent(getApplicationContext(), Main_Activity.class);		startActivity(intent);		finish();	}		@Override	public void finish() {		overridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out);		super.finish();	}	@Override	public void initView() {		this.setContentView(R.layout.activity_map);		this.processManager = ProcessManager.getInstance();		this.processManager.addActivity(this);	}	@Override	public void getXmlResources() {		this.btn_back = (ImageButton) this.findViewById(R.id.btn_back);		this.layout_header = (LinearLayout) this.findViewById(R.id.layout_header);		this.layout_progressbar = (LinearLayout) this.findViewById(R.id.layout_progressbar);				// contents		this.list = (ListView) this.findViewById(R.id.list);		this.btn_advertising = (ImageView) this.findViewById(R.id.btn_advertising);		this.total_title = (TextView) this.findViewById(R.id.total_title);		this.text_wait = (TextView) this.findViewById(R.id.text_wait);	}	@Override	public void modifyXmlResources() {		LayoutParams param;        param = new LayoutParams(LayoutParams.MATCH_PARENT,StaticData.device_Height/10);        this.layout_header.setLayoutParams(param);                // 언어 설정에 다른 화면 구성		switch (StaticData.NOWLANGUAGE) {		case StaticData.KOREA:			this.btn_back.setImageResource(R.drawable.b_back_kr);			this.total_title.setText(R.string.map_ko);			this.text_wait.setText(R.string.wait_ko);			break;		case StaticData.ENGLISH:			this.btn_back.setImageResource(R.drawable.b_back_en);			this.total_title.setText(R.string.map_en);			this.text_wait.setText(R.string.wait_en);			break;		case StaticData.CHINA:			this.btn_back.setImageResource(R.drawable.b_back_cn);			this.total_title.setText(R.string.map_cn);			this.text_wait.setText(R.string.wait_cn);			break;		}	}	@Override	public void setEventListener() {		this.list.setOnItemClickListener(new OnItemClickListener() {			@Override			public void onItemClick(AdapterView<?> parent, View view,					int position, long id) {				Intent intent = new Intent(getApplicationContext(), MapDetail_Activity.class);				intent.putExtra("image_url", items.get(position).MAP);				intent.putExtra("title_text", items.get(position).TITLE);				startActivity(intent);				finish();			}		});				this.btn_back.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				Intent intent = new Intent(getApplicationContext(), Main_Activity.class);				startActivity(intent);				finish();			}		});				this.btn_advertising.setOnClickListener(new OnClickListener() {			@Override			public void onClick(View v) {				try{					Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(StaticData.bannderDto.MAP_LANDING_URL));					startActivity(intent);				}catch(Exception e){}			}		});				this.setBannerImage();	}		public void setBannerImage(){		try{			ImageDownloader.download(StaticData.DEFAULT_URL+StaticData.bannderDto.MAP_BANNER, btn_advertising);		}catch(Exception e){		}	}		class setMapList extends WeakAsyncTask<Void, Void, Void, Activity>{		boolean result = false;				public setMapList(Activity target) {			super(target);		}				@Override		protected void onPreExecute(Activity target) {			layout_progressbar.setVisibility(LinearLayout.VISIBLE);		}		@Override		protected Void doInBackground(Activity target, Void... params) {			MapDAO dao = new MapDAO(Map_Activity.this);			try {				result = dao.setMapList();			} catch (Exception e) {				result = false;			}						if(result){				if(items != null){					items.clear();				}				items = dao.getMapList();			}			return null;		}				@Override		protected void onPostExecute(Activity target, Void result) {			if(this.result){				setMapAdapter();			}else{				switch (StaticData.NOWLANGUAGE) {				case StaticData.KOREA:				Toast.makeText(getApplicationContext(),				R.string.please_retry_ko, Toast.LENGTH_SHORT).show();				break;				case StaticData.ENGLISH:				Toast.makeText(getApplicationContext(),				R.string.please_retry_en, Toast.LENGTH_SHORT).show();				break;				case StaticData.CHINA:				Toast.makeText(getApplicationContext(),				R.string.please_retry_cn, Toast.LENGTH_SHORT).show();				break;				}			}			setEventListener();			layout_progressbar.setVisibility(LinearLayout.GONE);		}	}}